<!DOCTYPE html>
<html lang="en" data-theme="light">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Golang Challenge Tracker</title>
    <link href="./css/output.css" rel="stylesheet" />
    <style>
        body {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        }

        .card {
            transition: all 0.3s ease-in-out;
        }

        .card:hover {
            transform: translateY(-4px) scale(1.01);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
        }

        .badge-tag {
            font-size: 10px;
            font-weight: 600;
            padding: 2px 8px;
            border-radius: 9999px;
        }

        .tag-container {
            flex-wrap: wrap;
            display: flex;
            gap: 4px;
        }
    </style>
</head>

<body class="text-gray-800">
    <div class="max-w-7xl mx-auto p-4">
        <h1 class="text-4xl font-bold text-center text-teal-600 mb-10 tracking-tight">📘 Golang Mastery Challenges</h1>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-5 justify-center">
            <% challenges.forEach(ch=> { %>
                <div
                    class="card w-full md:w-full rounded-2xl border border-gray-200 p-6 bg-gradient-to-r <%= ch.completed ? 'from-teal-200' : 'from-white' %> <%= ch.published ? 'to-amber-200' : 'to-white' %>">
                    <div class="flex justify-between mb-3">
                        <span class="text-xs font-bold text-gray-600">
                            <%= levelTitles[ch.level] || "Unknown Level" %>
                        </span>
                        <span class="text-[10px] text-green-600 font-bold">#<%= ch.id %></span>
                    </div>

                    <h3 class="text-xl font-bold <%= levelColors[ch.level] || 'text-gray-800' %> mb-2">
                        <%= ch.name %>
                    </h3>
                    <p class="text-xs  text-gray-900 mb-3">
                        <%= ch.description %>
                    </p>
                    <% if (ch.tags && ch.tags.length> 0) { %>
                        <div class="tag-container mb-3">
                            <% ch.tags.forEach(tag=> { %>
                                <span class="badge-tag <%= levelTagColors[tagLevels[tag]] || 'bg-gray-200 text-gray-800' %>">
                                    <%= tag %>
                                </span>
                                <% }) %>
                        </div>
                        <% } %>

                            <div class="flex justify-between items-center text-sm mt-4">
                                <div>
                                    <span class="font-semibold text-green-700">✅ <%= ch.completed ? "Done" : "Not yet"
                                            %></span><br>
                                    <span class="font-semibold text-yellow-700">📢 <%= ch.published ? "Published"
                                            : "Draft" %></span>
                                </div>

                                <div class="flex gap-2">
                                    <button
                                        class="btn btn-xs px-3 <%= ch.completed ? 'btn-secondary' : 'btn-success' %> font-bold toggle-complete"
                                        data-id="<%= ch.id %>">
                                        <%= ch.completed ? 'Undo' : '✔️ Done' %>
                                    </button>
                                    <button
                                        class="btn btn-xs px-3 <%= ch.published ? 'btn-primary' : 'btn-warning' %> font-bold toggle-published"
                                        data-id="<%= ch.id %>">
                                        <%= ch.published ? 'Unpub' : 'Publish' %>
                                    </button>
                                </div>
                            </div>
                </div>
                <% }) %>
        </div>
    </div>

    <script>
        document.querySelectorAll('.toggle-complete').forEach(btn => {
            btn.addEventListener('click', e => {
                const id = e.target.dataset.id;
                fetch(`/toggle/${id}`, { method: 'POST' }).then(() => window.location.reload());
            });
        });

        document.querySelectorAll('.toggle-published').forEach(btn => {
            btn.addEventListener('click', e => {
                const id = e.target.dataset.id;
                fetch(`/toggle-published/${id}`, { method: 'POST' }).then(() => window.location.reload());
            });
        });
    </script>
</body>

</html>